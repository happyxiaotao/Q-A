Q：C/C++中有哪些函数调用约定，分别有什么作用？
A：函数调用约定指的是：
函数调用约定是对函数调用方与被调用方之间明确的约定；
主要规定3个方面的内容：①函数参数的传递顺序和方式②栈的维护方式③名字修饰的策略
现在常见的调用约定有：_cdecl,_stacall,_fastcall,_thiscall
1、__cdecl
（1）__cdecl调用约定又称为 C 调用约定，是 C/C++ 语言缺省的调用约定。
（2）参数按照从右至左的方式入栈，
（3）函数本身不清理栈，此工作由调用者负责，
（4）返回值在EAX中。
（5）名字修饰是下划线＋函数名
由于由调用者清理栈，所以允许可变参数函数存在，如int sprintf(char* buffer,const char* format,...);。
2、__stdcall
__stdcall 很多时候被称为 pascal 调用约定。pascal 语言是早期很常见的一种教学用计算机程序设计语言，其语法严谨。
（1）参数按照从右至左的方式入栈，
（2）函数自身清理堆栈，
（3）返回值在EAX中。
3、__fastcall
顾名思义，__fastcall 的特点就是快，因为它通过 CPU 寄存器来传递参数。
（1）他用 ECX 和 EDX 传送前两个双字（DWORD）或更小的参数，剩下的参数按照从右至左的方式入栈，
（2）函数自身清理堆栈，
（3）返回值在 EAX 中。
4、__thiscall
（1）这是 C++ 语言特有的一种调用方式，用于类成员函数的调用约定。
（2）参数按照从右至左的方式入栈。
（3）如果参数确定，this 指针存放于 ECX 寄存器，函数自身清理堆栈；
（4）如果参数不确定，this指针在所有参数入栈后再入栈，调用者清理栈。